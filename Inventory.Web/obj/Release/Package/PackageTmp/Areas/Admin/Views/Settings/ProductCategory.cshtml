@model IEnumerable<Inventory.Model.ProductCategory>

@{
    ViewBag.Title = "Product Category";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<h3>Product Category</h3>
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="text-success">
                @if (ViewData["Message"] != null && ViewData["Message"].ToString() != "")
                {
                    @ViewData["Message"];
                }
            </div>
        </div>

        <div class="container">
            <div class="bg-success" id="message">
            </div>
        </div>
        <br />
        <div class="form-horizontal" role="form">
            <div class="container">
                <div class="row">

                    <div class="form-group">
                        @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("ProductCategoryDescription", "", new { @class = "form-control" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.Label("Code Value", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("Codes_Val", "", new { @class = "form-control" })
                            </div>
                        </div>*@

                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" id="Save" />
                        <input type="submit" value="Clear" class="btn btn-danger" id="Clear" style="margin-left:20px;" />
                    </div>
                </div>
                <div style="display:none">
                    @Html.TextBox("Flag", "false")
                </div>
            </div>
        </div>

    </div>

}
<div class="container">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead style="color:blueviolet;">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductCategoryDescription)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.ProductCategoryCode)
                        </th>*@
                    <th></th>
                </tr>
            </thead>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductCategoryDescription)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.ProductCategoryCode)
                            </td>*@
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProductCategoryID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ProductCategoryID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ProductCategoryID })
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Save').click(function (e) {
                e.preventDefault();
                var ProductCategoryDescription = $('#ProductCategoryDescription').val();
                alert(ProductCategoryDescription);
                var ProductCategory = {};
                ProductCategory.ProductCategoryDescription = ProductCategoryDescription;
                alert(ProductCategory.ProductCategoryDescription)
                $.ajax({
                    @*url: '@Url.HttpRouteUrl("", new { Controller = "Settings", c = "" })',*@
                    //url: 'http://localhost:29205//api/Settings/AddProductCategory',
                    url: '/api/Settings/AddProductCategory',
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(ProductCategory),
                    success: successFunc,
                    error: errorFunc
                });

                function successFunc(response) {
                    console.log(response);
                    alert(response);
                }

                function errorFunc(error) {
                    //alert("Error occured");//To avoid alerting if no internet connection.
                    console.log(error);
                }
            })
        })

    </script>
}